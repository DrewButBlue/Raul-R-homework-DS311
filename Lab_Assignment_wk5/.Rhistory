**Key Functions**
**Key Functions**
knitr::opts_chunk$set(echo = TRUE)
n1 <- 15
n1
typeof(n1)
n2 <- 1.5
n2
typeof(n2)
c1 <- "c"
c1
typeof(c1)
c2 <- "a string of text"
c2
typeof(c2)
l1 <- TRUE
l1
typeof(l1)
l2 <- F
l2
typeof(l2)
num <- 10
numToChar <- as.character(num)
paste("num Type: ", typeof(num), " | numToChar: ", typeof(numToChar))
# Transforming characters into numeric
char <- "10"
charToNum <- as.numeric(char)
paste("char Type: ", typeof(num), " | charToNum: ", typeof(numToChar))
# Enter your code here!
type(a)
# Enter your code here!
typeof(a)
a <- as.integer(500)
b <- as.double(500)
c <- as.character(500)
# Enter your code here!
typeof(a)
typeof(a)
typeof(b)
typeof(c)
d <- a / b
# Enter your code here!
typeof(d)
# Check the data type of the following variables
a <- as.integer(500)
b <- as.double(500)
c <- as.character(500)
# Enter your code here!
typeof(a)
typeof(b)
typeof(c)
# Check the data type of the new variable 'd'
d <- a / b
# Enter your code here!
typeof(d)
# Enter your code here.
vector_of_letters <- c(a:z)
# Enter your code here.
vector_of_letters <- c(letters(a:z))
vector_of_letters <- c(letters)
vector_of_letters
m2 <- matrix(c("a", "b",
"c", "d"),
nrow = 2,
byrow = T)
matrix_of_LETTERS <- matrix(c(LETTERS),
nrow = 2,
byrow = T)
matrix_of_LETTERS
matrix_of_LETTERS <- matrix(c(LETTERS),
nrow = 2,)
#byrow = T)
matrix_of_LETTERS
matrix_of_LETTERS <- matrix(c(LETTERS),
nrow = 2,
byrow = T)
matrix_of_LETTERS
matrix_of_LETTERS <- matrix(c(LETTERS),
nrow = 2,
)
matrix_of_LETTERS
matrix_of_LETTERS <- matrix(c(LETTERS),
nrow = 2,
byrow = T)
matrix_of_LETTERS
vNumeric   <- c(1, 2, 3)
vCharacter <- c("a", "b", "c")
vLogical   <- c(T, F, T)
df1 <- cbind(vNumeric, vCharacter, vLogical)
df1  # Coerces all values to most basic data type
df2 <- as.data.frame(cbind(vNumeric, vCharacter, vLogical))
df2  # Makes a data frame with three different data types
df1 <- cbind(vNumeric, vCharacter, vLogical)
df1  # Coerces all values to most basic data type
df1 <- cbind(vNumeric, vCharacter, vLogical)
df1  # Coerces all values to most basic data type
df2 <- as.data.frame(cbind(vNumeric, vCharacter, vLogical))
df2  # Makes a data frame with three different data types
vNumeric   <- c(1, 2, 3)
vCharacter <- c("a", "b", "c")
vLogical   <- c(T, F, T)
vNumeric   <- c(1, 2, 3)
vCharacter <- c("a", "b", "c")
vLogical   <- c(T, F, T)
df1 <- cbind(vNumeric, vCharacter, vLogical)
df1  # Coerces all values to most basic data type
df2 <- as.data.frame(cbind(vNumeric, vCharacter, vLogical))
df2  # Makes a data frame with three different data types
# Write your code here!
# Part a
x<-4
# Part b
y<-12
print(x)
print(y)
# Part d
z <- y/x
# Part e
print(paste("y divided by x is equal to ", z))
knitr::opts_chunk$set(echo = TRUE)
# Loading the data
data(mtcars)
# Head of the data set
head(mtcars)
# Enter your code here!
count.fields()
# Enter your code here!
count.fields(data)
# Enter your code here!
number_cols <- ncol(mtcars)
# Enter your code here!
ncol(mtcars)
nrow(mtcars)
ncol(mtcars)
nrow(mtcars)
# Answer:
print("There are total of 11 variables and 32 observations in this data set.")
# Enter your code here!
summary(mtcars)
count.fields(mtcars.is.discrete)
count.fields((mtcars.is.discrete)
count.fields((mtcars.is.discrete)
count.fields(mtcars)
ncols(mtcars).is.discrete
is.discrete(mtcars)
class(mtcars)
# Enter your code here!
summary(mtcars)
# Answer:
print("There are 7 discrete variables and 4 continuous variables in this data set.")
summary(mtcars)
# Answer:
print("There are 7 discrete variables and 4 continuous variables in this data set.")
# Enter your code here!
m <- mean(mtcars)
# Enter your code here!
m <- mean(mtcars['mpg'])
# Enter your code here!
m <- mean(mtcars[mpg])
# Enter your code here!
m <- mean(mpg)
# Enter your code here!
m <- mean(mtcars.mpg)
# Enter your code here!
m <- mean(mtcars$mpg)
m
m <- mean(mtcars$mpg)
v <- var(mtcars$mpg)
s <- sd(mtcars$mpg)
# print(paste("The average of Mile Per Gallon from this data set is ",  , " with variance ",  , " and standard deviation",  , "."))
```
print(paste("The average of Mile Per Gallon from this data set is ",  , " with variance ",  , " and standard deviation",  , "."))
print(paste("The average of Mile Per Gallon from this data set is ", m , " with variance ", v , " and standard deviation", s , "."))
# Enter your code here!
m <- mean(mtcars$mpg)
v <- var(mtcars$mpg)
s <- sd(mtcars$mpg)
print(paste("The average of Mile Per Gallon from this data set is ", m , " with variance ", v , " and standard deviation", s , "."))
# Enter your code here!
avg_mpg_per_cyl <- aggregate(mpg - cyl, data=mtcars, mean)
# Enter your code here!
avg_mpg_per_cyl <- aggregate(mpg - cyl, data=mtcars, mean)
# Enter your code here!
avg_mpg_per_cyl <- aggregate(mpg - cyl, data=mtcars, mean)
avg_mpg_per_cyl
# Enter your code here!
avg_mpg_per_cyl <- aggregate(mpg - cyl, data= mtcars, mean)
# Enter your code here!
avg_mpg_per_cyl <- aggregate(mpg - cyl, data = mtcars, mean)
# Enter your code here!
avg_mpg_per_cyl <- aggregate(mpg ~ cyl, data = mtcars, mean)
avg_mpg_per_cyl
# Enter your code here!
avg_mpg_per_cyl <- aggregate(mpg ~ cyl, data=mtcars, mean)
avg_mpg_per_cyl
sd_mpg_per_gear <- aggregate(mpg ~ gear, data=mtcars, mean)
sd_mpg_per_gear
sd_mpg_per_gear <- aggregate(mpg ~ gear, data=mtcars, sd)
Enter your code here!
avg_mpg_per_cyl <- aggregate(mpg ~ cyl, data=mtcars, mean)
avg_mpg_per_cyl
sd_mpg_per_gear <- aggregate(mpg ~ gear, data=mtcars, sd)
sd_mpg_per_gear
sd_mpg_per_gear <- aggregate(mpg ~ gear, data=mtcars, sd)
sd_mpg_per_gear
avg_mpg_per_cyl <- aggregate(mpg ~ cyl, data=mtcars, mean)
avg_mpg_per_cyl
sd_mpg_per_gear <- aggregate(mpg_sd ~ gear, data=mtcars, sd)
avg_mpg_per_cyl <- aggregate(mpg ~ cyl, data=mtcars, mean)
avg_mpg_per_cyl
sd_mpg_per_gear <- aggregate(mpg ~ gear, data=mtcars, sd)
sd_mpg_per_gear
# Enter your code here!
obs_cyl_gear <- table(cyl ~ gear)
# Enter your code here!
obs_cyl_gear <- table(cyl ~ gear)
# Enter your code here!
obs_cyl_gear <- table(cyl,gear)
# Enter your code here!
obs_cyl_gear <- table(cyl)
# Enter your code here!
obs_cyl_gear <- table(mtcars$cyl)
obs_cyl_gear
# Enter your code here!
obs_cyl_gear <- table(mtcars$cyl,mtcars$gear)
obs_cyl_gear
# Enter your code here!
obs_cyl_gear <- table(mtcars$cyl, mtcars$gear, row.names())
# Enter your code here!
obs_cyl_gear <- table(mtcars$cyl, mtcars$gear, row.names('cyl'))
# Enter your code here!
obs_cyl_gear <- table(mtcars$cyl, mtcars$gear, row.names('cyl','gear'))
# Enter your code here!
obs_cyl_gear <- table(mtcars$cyl, mtcars$gear, row.names)
# Enter your code here!
obs_cyl_gear <- table(mtcars$cyl, mtcars$gear, row.names=c('cyl','gear'))
# Enter your code here!
obs_cyl_gear <- table(mtcars$cyl, mtcars$gear, row.names='cyl','gear')
# Enter your code here!
obs_cyl_gear <- table(mtcars$cyl, mtcars$gear, row.names=TRUE)
# Enter your code here!
obs_cyl_gear <- table(mtcars.cyl, mtcars.gear)
# Enter your code here!
obs_cyl_gear <- table(cyl, gear)
# Enter your code here!
obs_cyl_gear <- table(mtcars$cyl, mtcars$gear)
# Enter your code here!
obs_cyl_gear <- table(mtcars$cyl, mtcars$gear)
obs_cyl_gear
print("The most common car type in this data set is car with 8 cylinders and 3 gears. There are total of 12 cars belong to this specification in the data set.")
data("PlantGrowth")
# Head of the data set
head(PlantGrowth)
# Enter your code here!
plot(x = group, y = weight)
# Enter your code here!
plot(x = PlantGrowth$group, y = PlantGrowth$weight)
# Enter your code here!
plot(group = PlantGrowth$group, y = PlantGrowth$weight)
# Enter your code here!
plot(x = PlantGrowth$group, y = PlantGrowth$weight)
# Enter your code here!
plot(PlantGrowth, aes(x = group, y = weight)
# Enter your code here!
plot(x = PlantGrowth$group, y = PlantGrowth$weight)
# Enter your code here!
plot(x = PlantGrowth$group, y = PlantGrowth$weight)
plot(x = PlantGrowth$group, y = PlantGrowth$weight)
labels(title = "Weights of plants in Groups", x = "Group", y = "Weight")
# Enter your code here!
plot(x = PlantGrowth$group, y = PlantGrowth$weight, labels(title = "Weights of plants in Groups", x = "Group", y = "Weight"))
# Enter your code here!
boxplot(x = PlantGrowth$group, y = PlantGrowth$weight, labels(title = "Weights of plants in Groups", x = "Group", y = "Weight"))
# Enter your code here!
boxplot(weight ~ group, data = PlantGrowth, main = "Plant Growth by Group", xlab = "Group", ylab = "Weight")
summary(PlantGrowth)
boxplot(weight ~ group, data = PlantGrowth, main = "Plant Growth by Group", xlab = "Group", ylab = "Weight")
summary(PlantGrowth)
summary(PlantGrowth$group)
summary(PlantGrowth)
ctrlGroup <- subset(PlantGrowth, group=='ctrl')
summary(ctrlGroup)
ctrlGroup <- subset(PlantGrowth, group=='ctrl')
trt1Group <- subset(PlantGrowth, group=='trt1')
trt2Group <- subset(PlantGrowth, group=='trt2')
summary(ctrlGroup)
summary(trt1Group)
summary(trt2Group)
boxplot(weight ~ group, data = PlantGrowth, main = "Plant Growth by Group", xlab = "Group", ylab = "Weight")
ctrlGroup <- subset(PlantGrowth, group=='ctrl')
trt1Group <- subset(PlantGrowth, group=='trt1')
trt2Group <- subset(PlantGrowth, group=='trt2')
summary(ctrlGroup)
summary(trt1Group)
summary(trt2Group)
data("mtcars")
# Head of the data set
head(mtcars)
hist(mtcars$mpg,breaks = 10, main = "Vehicle MPGs", xlab = "MPG", ylab = "Num Cars")
print("Most of the cars in this data set are in the class of ______ mile per gallon.")
hist(mtcars$mpg,breaks = 10, main = "Vehicle MPGs", xlab = "MPG", ylab = "Num Cars")
print("Most of the cars in this data set are in the class of 15 mile per gallon.")
data("USArrests")
# Head of the data set
head(USArrests)
# Enter your code here!
pairs(USArrests, main = "Arrest data")
# Enter your code here!
pairs(USArrests$Murder USArrests$Assault, main = "Arrest data")
# Enter your code here!
pairs(USArrests$Murder, main = "Arrest data")
# Enter your code here!
pairs(USArrests$Murder, main = "Arrest data")
# Enter your code here!
pairs(USArrests$Murder USArrests$Assault, main = "Arrest data")
# Enter your code here!
pairs(USArrests$Murder.Assault, main = "Arrest data")
# Enter your code here!
pairs(USArrests$Murder Assault, main = "Arrest data")
# Enter your code here!
pairs(Murder Assault, main = "Arrest data")
# Enter your code here!
pairs(Murder ~ Assault, main = "Arrest data")
# Enter your code here!
pairs(USArrests$Murder ~ Assault, main = "Arrest data")
# Enter your code here!
pairs(USArrests$Murder ~ USArrests$Assault, main = "Arrest data")
plot(USArrests$Murder, USArrests$Assault, main = "US arrests for Assault and Murder", xlab = "Murder", ylab = "Assault")
pairs(USArrests$Murder ~ USArrests$Assault, main = "Arrest data")
plot(USArrests$Murder, USArrests$Assault, main = "US arrests for Assault vs Murder", xlab = "Murder", ylab = "Assault")
# Enter your code here!
pairs(USArrests$Murder ~ USArrests$Assault, main = "Arrest data", xlab = "Murder", ylab = "Assault")
pairs(USArrests$Murder ~ USArrests$Assault, main = "Arrest data")
plot(USArrests$Murder, USArrests$Assault, main = "US arrests for Assault vs Murder", xlab = "Murder", ylab = "Assault")
wd1 <- getwd()
paste("Current Working Directory: ", wd1)
# Load and clean the housing data set
download.file(url='https://www.jaredlander.com/data/housing.csv',
destfile='data/housing.csv', mode='wb')
housingData <- read.csv('data/housing.csv')
housingData <- subset(housingData,
select = c("Neighborhood", "Market.Value.per.SqFt", "Boro", "Year.Built"))
housingData <- na.omit(housingData)
# Head of the cleaned data set
head(housingData)
# Enter your code here!
summary(housingData)
head(housingData)
# Enter your code here!
summary(housingData)
mean_value_per_sqft_by_neighborhood <- aggregate(Neighborhood ~ Market.Value.per.SqFt, data=housingData, mean)
mean_value_per_sqft_by_neighborhood
mean_value_per_sqft_by_neighborhood <- aggregate(Market.Value.per.SqFt, data=housingData, mean)
mean_value_per_sqft_by_neighborhood <- aggregate(~Market.Value.per.SqFt, data=housingData, mean)
mean_value_per_sqft_by_neighborhood <- aggregate(housingData$Market.Value.per.SqFt, data=housingData, mean)
mean_value_per_sqft_by_neighborhood <- aggregate(housingData$Market.Value.per.SqFt, mean)
mean_value_per_sqft_by_neighborhood <- aggregate(housingData$Market.Value.per.SqFt, mean)
mean_value_per_sqft_by_neighborhood <- aggregate(Neighborhood ~ Market.Value.per.SqFt, data=housingData, mean)
mean_value_per_sqft_by_neighborhood
mean_value_per_sqft_by_neighborhood <- aggregate(Neighborhood ~ Market.Value.per.SqFt, data=housingData)
# Enter your code here!
summary(housingData$Market.Value.per.SqFt)
# Head of the cleaned data set
head(housingData)
mean_value_per_sqft_by_neighborhood <- subset(housingData$Neighborhood)
mean_value_per_sqft_by_neighborhood <- housingData$Neighborhood
mean_value_per_sqft_by_neighborhood
# Head of the cleaned data set
head(housingData)
# Enter your code here!
summary(housingData$Market.Value.per.SqFt)
summary(housingData$Year.Built)
# Head of the cleaned data set
head(housingData)
mean_value_per_sqft_by_neighborhood <- subset(housingData, Neighborhood == "Financial")
mean_value_per_sqft_by_neighborhood
summary(housingData$Market.Value.per.SqFt)
summary(housingData$Year.Built)
mean_value_per_sqft_by_neighborhood <- subset(housingData, Neighborhood == "Financial")
mean_value_per_sqft_by_neighborhood
# Head of the cleaned data set
head(housingData)
mean_value_per_sqft_by_neighborhood <- subset(housingData, Neighborhood == "FINANCIAL")
mean_value_per_sqft_by_neighborhood
houses_in_financial_neighboorhood <- subset(housingData, Neighborhood == "FINANCIAL")
mean_value_per_sqft_by_neighborhood <-mean(houses_in_financial_neighboorhood$Market.Value.per.SqFt)
mean_value_per_sqft_by_neighborhood
# Head of the cleaned data set
head(housingData)
houses_in_manhattan_boro <- subset(housingData, Boro == "Manhattan")
houses_in_manhattan_boro <- subset(housingData, Boro == "Manhattan")
mean_value_per_sqft_manhattan <-mean(houses_in_financial_neighboorhood$Market.Value.per.SqFt)
mean_value_per_sqft_manhattan
houses_in_financial_neighboorhood <- subset(housingData, Neighborhood == "FINANCIAL")
mean_value_per_sqft_financial <-mean(houses_in_financial_neighboorhood$Market.Value.per.SqFt)
mean_value_per_sqft_financial
houses_in_financial_neighboorhood <- subset(housingData, Neighborhood == "FINANCIAL")
mean_value_per_sqft_financial <-mean(houses_in_financial_neighboorhood$Market.Value.per.SqFt)
mean_value_per_sqft_financial
houses_in_manhattan_boro <- subset(housingData, Boro == "Manhattan")
mean_value_per_sqft_manhattan <-mean(houses_in_financial_neighboorhood$Market.Value.per.SqFt)
mean_value_per_sqft_manhattan
houses_in_manhattan_boro <- subset(housingData, Boro == "Manhattan")
houses_in_financial_neighboorhood <- subset(housingData, Neighborhood == "FINANCIAL")
mean_value_per_sqft_financial <-mean(houses_in_financial_neighboorhood$Market.Value.per.SqFt)
mean_value_per_sqft_financial
houses_in_manhattan_boro <- subset(housingData, Boro == "Manhattan")
mean_value_per_sqft_manhattan <-mean(houses_in_financial_neighboorhood$Market.Value.per.SqFt)
mean_value_per_sqft_manhattan
houses_in_financial_neighboorhood <- subset(housingData, Neighborhood == "FINANCIAL")
mean_value_per_sqft_financial <-mean(houses_in_financial_neighboorhood$Market.Value.per.SqFt)
mean_value_per_sqft_financial
houses_in_manhattan_boro <- subset(housingData, Boro == "Manhattan")
mean_value_per_sqft_manhattan <-mean(houses_in_manhattan_boro$Market.Value.per.SqFt)
mean_value_per_sqft_manhattan
aggregate(Market.Value.per.SqFt ~ Boro, data = housingData, mean)
aggregate(Market.Value.per.SqFt ~ Neighboorhood, data = housingData, mean)
aggregate(Market.Value.per.SqFt ~ Neighborhood, data = housingData, mean)
#scatterplot of average home values by date
plot(housingData$Market.Value.per.SqFt, housingData$Year.Built, main = "Average Value of SqFt by Year Built", xlab = "Market Value per SqFt", ylab = "Year Built")
#average value of homes by neighborhood
avg_val_by_neigborhood <- aggregate(Market.Value.per.SqFt ~ Neighborhood, data = housingData, mean)
avg_val_by_neigborhood
# Head of the cleaned data set
head(housingData)
#average home value by date
avg_val_by_date <- aggregate(Market.Value.per.SqFt ~ Year.Built, data = housingData, mean)
avg_val_by_date
#scatterplot of average home values by date
plot(avg_val_by_date$Market.Value.per.SqFt, avg_val_by_date$Year.Built, main = "Average Value of SqFt by Year Built", xlab = "Market Value per SqFt", ylab = "Year Built")
avg_val_by_date
# Enter your code here!
#scatterplot of average home values by date
plot(avg_val_by_date$Market.Value.per.SqFt, avg_val_by_date$Year.Built, main = "Average Value of SqFt by Year Built", xlab = "Market Value per SqFt", ylab = "Year Built")
avg_val_by_boro <- aggregate(Market.Value.per.SqFt ~ Boro, data = housingData, mean)
avg_val_by_boro
#graphs of
pairs(avg_val_by_boro$Market.Value.per.SqFt ~ avg_val_by_neigborhood$Market.Value.per.SqFt, main = "Arrest data")
#graph of
hist(houses_in_manhattan_boro$Year.Built, breaks = 10, main = "")
summary(housingData$Market.Value.per.SqFt)
summary(housingData$Year.Built)
#average value of homes by neighborhood
avg_val_by_neigborhood <- aggregate(Market.Value.per.SqFt ~ Neighborhood, data = housingData, mean)
#average value of homes by boro
avg_val_by_boro <- aggregate(Market.Value.per.SqFt ~ Boro, data = housingData, mean)
#average value of houses by SqFt in Financial neighborhood
houses_in_financial_neighboorhood <- subset(housingData, Neighborhood == "FINANCIAL")
mean_value_per_sqft_financial <-mean(houses_in_financial_neighboorhood$Market.Value.per.SqFt)
mean_value_per_sqft_financial
#average value of houses by SqFt in Manhattan boro
houses_in_manhattan_boro <- subset(housingData, Boro == "Manhattan")
mean_value_per_sqft_manhattan <-mean(houses_in_manhattan_boro$Market.Value.per.SqFt)
mean_value_per_sqft_manhattan
#average home value by date
avg_val_by_date <- aggregate(Market.Value.per.SqFt ~ Year.Built, data = housingData, mean)
# Enter your code here!
#summary stats of the values and years built
summary(housingData$Market.Value.per.SqFt)
summary(housingData$Year.Built)
#average value of homes by neighborhood
avg_val_by_neigborhood <- aggregate(Market.Value.per.SqFt ~ Neighborhood, data = housingData, mean)
avg_val_by_neigborhood
#average value of homes by boro
avg_val_by_boro <- aggregate(Market.Value.per.SqFt ~ Boro, data = housingData, mean)
avg_val_by_boro
#average value of houses by SqFt in Financial neighborhood
houses_in_financial_neighboorhood <- subset(housingData, Neighborhood == "FINANCIAL")
mean_value_per_sqft_financial <-mean(houses_in_financial_neighboorhood$Market.Value.per.SqFt)
mean_value_per_sqft_financial
#average value of houses by SqFt in Manhattan boro
houses_in_manhattan_boro <- subset(housingData, Boro == "Manhattan")
mean_value_per_sqft_manhattan <-mean(houses_in_manhattan_boro$Market.Value.per.SqFt)
mean_value_per_sqft_manhattan
#average home value by date
avg_val_by_date <- aggregate(Market.Value.per.SqFt ~ Year.Built, data = housingData, mean)
avg_val_by_date
# Enter your code here!
#scatterplot of average home values by date
plot(avg_val_by_date$Market.Value.per.SqFt, avg_val_by_date$Year.Built, main = "Average Value of SqFt by Year Built", xlab = "Market Value per SqFt", ylab = "Year Built")
#histogram of number of houses in manhattan by year built
hist(houses_in_manhattan_boro$Year.Built, breaks = 10, main = "Number of houses by year built in Manhattan")
# Enter your code here!
#scatterplot of average home values by date
plot(avg_val_by_date$Market.Value.per.SqFt, avg_val_by_date$Year.Built, main = "Average Value of SqFt by Year Built", xlab = "Market Value per SqFt", ylab = "Year Built")
#histogram of number of houses in manhattan by year built
hist(houses_in_manhattan_boro$Year.Built, breaks = 10, main = "Number of houses by year built in Manhattan", xlab = "Year Built", ylab = "Number of Houses")
# Enter your code here!
#scatterplot of average home values by date
plot(avg_val_by_date$Market.Value.per.SqFt, avg_val_by_date$Year.Built, main = "Average Value of SqFt by Year Built", xlab = "Market Value per SqFt", ylab = "Year Built")
#histogram of number of houses in manhattan by year built
hist(houses_in_manhattan_boro$Year.Built, breaks = 6, main = "Number of houses by year built in Manhattan", xlab = "Year Built", ylab = "Number of Houses")
# Enter your code here!
#scatterplot of average home values by date
plot(avg_val_by_date$Market.Value.per.SqFt, avg_val_by_date$Year.Built, main = "Average Value of SqFt by Year Built", xlab = "Market Value per SqFt", ylab = "Year Built")
#histogram of number of houses in manhattan by year built
hist(houses_in_manhattan_boro$Year.Built, breaks = 7, main = "Number of houses by year built in Manhattan", xlab = "Year Built", ylab = "Number of Houses")
